services:
  frontend:
    build:
      context: frontend
    restart: always
    ports:
      - 5173:5173
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - proxy-react
    depends_on:
      - backend
  backend:
    build:
      context: backend
      target: development
    restart: always
    networks:
      - proxy-spring
      - spring-postgresql
    depends_on:
      - db
  db:
    image: postgres:12-alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=monkeylog
      - POSTGRES_PASSWORD=mysecretpassword
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - spring-postgresql
  proxy:
    image: nginx:1.15-alpine
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - frontend
      - backend
    networks:
      - proxy-spring
      - proxy-react
    volumes:
      - ./proxy/nginx:/etc/nginx/conf.d
  #     - ./proxy/certbot/conf:/etc/letsencrypt
  #     - ./proxy/certbot/www:/var/www/certbot
  #   command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./proxy/certbot/conf:/etc/letsencrypt
  #     - ./proxy/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit term; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgresql-data:

networks:
  proxy-react:
  proxy-spring:
  spring-postgresql:
